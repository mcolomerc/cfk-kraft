apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: demoproducer
  namespace: confluent
spec:
  serviceName: demoproducer
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: demoproducer
  template:
    metadata:
      labels:
        app: demoproducer
    spec:
      containers:
      - name: demoproducer
        image: confluentinc/cp-kafka:latest
        command:
        - /bin/sh
        - -c
        - |
          kafka-producer-perf-test \
            --topic demo.topic  \
            --record-size 524288 \
            --throughput 64 \
            --producer.config /mnt/internal.properties \
            --num-records 1000
        volumeMounts:
        - name: kafka-properties
          mountPath: /mnt
        - name: kafka-ssl-autogenerated
          mountPath: /mnt/sslcerts
        resources:
          requests:
            memory: 512Mi
            cpu: 500m
      volumes:
        # This application pod will mount a volume for Kafka client properties from 
        # the secret `kafka-client-config-secure`
        - name: kafka-properties
          secret:
            secretName: kafka-client-config-secure
        # Confluent for Kubernetes, when configured with autogenerated certs, will create a
        # JKS keystore and truststore and store that in a Kubernetes secret named `kafka-generated-jks`.
        # Here, this client appliation will mount a volume from this secret so that it can use the JKS files.
        - name: kafka-ssl-autogenerated
          secret:
            secretName: kafka-generated-jks